INSTALL NOTES - WHEREHOO BOX AT ADASTRAL PARKInstall RedHat 7.2 + several additional packages (Enlightenment and all of X, etc)In BIOS, turn off Primary 1 and Secondary 1 hard drives (were previously "type unknown")this will avoid the "Press F1 to continue booting" error message at startupMachine is called...Its IP address is....[ ] ETH0 is not getting a DHCP responseDownload Java 1.3.1 and install (Redhat RPM)installed to /usr/java/jdk1.3.1_01Alias "current" directory to the current Java:	cd /usr/java	ln -s jdk1.3.1_01/ ./currentedit .bashrc for users 'wherehoo' and 'root'	export PATH=$PATH:/usr/java/current/binreboot and check Java available at loginDownload and install ANT (jakarta.apache.org/ant)	download the source, jakarta-ant-1.4.1.src.tar.gz	cd /tmp	tar -zxvf jakarta-ant-1.4.1.src.tar.gz	export ANT_HOME=/usr/local/ant	export JAVA_HOME=/usr/java/current	export PATH=${PATH}:${ANT_HOME}/bin	./build.sh	./build.sh installDownload and Install Postgresql (postgresql.org, ftp://ftp3.us.postgresql.org)	cd /tmp	tar -zxvf postgresql-7.1.3.tar.gz	cd postgresql-7.1.3	./configure --with-java	gmake	su	/usr/sbin/adduser postgres	gmake install (installs to /usr/local/pgsql)	cd /usr/local/pgsql	chown postgres * -R	chown postgres .	su - postgres	(see INSTALL for the 4 init and startup commands)		CREATE THE DATABASE	/usr/local/pgsql/bin/initdb -D /usr/local/pgsql/data	START THE DATABASE WITH TCP/IP AND THE LOG FILE in the data directory	/usr/local/pgsql/bin/postmaster -i -D /usr/local/pgsql/data >/usr/local/pgsql/data/logfile 2>&1 &		TEST IT	/usr/local/pgsql/bin/createdb test	/usr/local/pgsql/bin/psql test	supply the 7.1.1 driver to /usr/local/pgsql/share/java/jdbc7.1-1.1.jar		sftp jim@wherehoo.media.mit.edu		cd /usr/local/pgsql/share/java		lcd /tmp		get jdbc7.1-1.1.jar		cp /tmp/jdbc7.1-1.1.jar /usr/local/pgsql/share/javaq	Replace the current database with the master db from wherehoo.media.mit.edu		get the data from an existing server		cd /usr/local/pgsql		tar -c -f wherehoo_data.tar data/*		tar -c -f wherehoo_share.tar share/*		retrieve these files to the local machine				wherehoo_data2.tar.gz -- from wherehoo server at media lab		wherehoo_data_jims.tar.gz -- from jim's copy				stop the database server:	kill -INT (server's process id)		mv /usr/local/pgsql/data /usr/local/pgsql/data-HOLD		mv /usr/local/pgsql/share /usr/local/pgsql/share-HOLD		cd /usr/local/pgsql		tar -xvf the two files		restart the database server (as above)		see what's in there through psql  (su postgres; /usr/local/pgsql/bin/psql wherehoo)Install and start the Wherehoo server	Fetch sources in 20011210	check go.sh	*** it needs a firm address and forward/reverse name mappings to work right	*** try to fake it up with /etc/hosts if DNS can't be setup immediately	*** in fact as the DHCP leases expire, it keeps changing names	move it to some sensible place (/home/wherehoo?)		LOCKED DOWN A MACHINE NAME (STOLE THE SETTINGS FROM DHCP AND LOADED INTO linuxconf)	IP 132.146.77.199	mask 255.255.255.0		GW 132.146.77.110	name fairlight.bt-sys.bt.co.uk	ALIASED PATHS CREATED:	/usr/java/current -> /usr/java/jdk1.3.1_01	/home/wherehoo/current -> /home/wherehoo/20011210A SPARE COPY OF THE ENTIRE /usr/local/pgsql directory, as it waswhen it was working 12-12-01 at 4pm, is in /usr/local/pgsql-HOLDADD WEB SERVER AND PHP SEARCHES TO THIS MACHINEWWW files: /home/wherehoo/www  reachable via http://fairlight.bt-sys.bt.co.ukPHP + APACHE to POSTGRES 7.1.3http://www.php.netFROM: designmagick.50megs.com/postgresql-tutorial/intro.html <-- has everything you need!download apache 1.3.22 sources from apache.orgdownload php 4.1.0 sources from php.netunpack both into /usr/local/srccd /usr/local/src/apache_1.3.22./configurecd /usr/local/src/php-4.1.0./configure --with-pgsql --with-apache=../apache_1.3.22make make installcd /usr/local/src/apache_1.3.22./configure --activate-module=src/modules/php4/libphp4.amakemake installthe apache server is now in /usr/local/apacheits config is there ./conf directoryedit /usr/local/apache/conf/httpd.conf to un-comment the two lines for PHP4bring in everything from the existing /etc/httpd/conf/httpd.confalso in httpd.conf, setup the "index files" to be:    index.php index.shtml index.htmlstartup is /usr/local/apache/bin/apachectl startrevise /etc/rc.d/init.d/httpd to callout to this insteadremove any stray httpd and all of /etc/httpdCHKCONFIG and /etc/rc.d/init.d startup scripts:[x] autostart postgres[x] autostart wherehoo serverLARGE POSTGRES OBJECTS FROM PHPWRITING:ASSUMED: $database=pg_connect("dbname=   ");pg_exec($database,"begin");$oid = pg_locreate($database);$handle = pg_loopen($database,$oid,"w");pg_lowrite($handle,"large object data");pg_loclose($handle);pg_exec("database","commmit");READING(assumed: $database = pg_connect("dbname= ...")(assumed: $oid holds the object ID that's been read from the database)pg_exec($database,"begin");$handle = pg_loopen($database,$oid,"r");$objectData=pg_loread($handle,65525);pg_loclose($handle);pg_exec("database","commit");[x] make sure the new apache web server autostarts (/usr/local/apache/bin/apachectl start)*** STATUS[ ] try to get rid of the need for 'i' on postgres[ ] check out how it's opened by Wherehoo... remove the hostname and see if that does it[ ] turn off sendmail[ ] disable telnet**** GET A COPY OF EVERYTHING1) revised PHP scripts from /home/wherehoo/www2) startup scripts from /etc/rc.d/init.d3) contents of /home/wherehoo4) the above instructions